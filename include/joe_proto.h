/*  =========================================================================
    joe_proto - joe example protocol

    Codec header for joe_proto.

    ** WARNING *************************************************************
    THIS SOURCE FILE IS 100% GENERATED. If you edit this file, you will lose
    your changes at the next build cycle. This is great for temporary printf
    statements. DO NOT MAKE ANY CHANGES YOU WISH TO KEEP. The correct places
    for commits are:

     * The XML model used for this code generation: joe_proto.xml, or
     * The code generation script that built this file: zproto_codec_c
    ************************************************************************
    =========================================================================
*/

#ifndef JOE_PROTO_H_INCLUDED
#define JOE_PROTO_H_INCLUDED

/*  These are the joe_proto messages:

    HELLO - 
        filename            string      
        aux                 hash        

    CHUNK - 
        filename            string      
        offset              number 8    
        size                number 8    
        checksum            number 8    
        data                chunk       

    CLOSE - 
        filename            string      
        size                number 8    

    READY - 

    ERROR - 
        reason              string      
*/


#define JOE_PROTO_HELLO                     1
#define JOE_PROTO_CHUNK                     2
#define JOE_PROTO_CLOSE                     3
#define JOE_PROTO_READY                     4
#define JOE_PROTO_ERROR                     5

#include <czmq.h>

#ifdef __cplusplus
extern "C" {
#endif

//  Opaque class structure
#ifndef JOE_PROTO_T_DEFINED
typedef struct _joe_proto_t joe_proto_t;
#define JOE_PROTO_T_DEFINED
#endif

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/joe_proto.api" to make changes.
//  @interface
//  This is a stable class, and may not change except for emergencies. It
//  is provided in stable builds.
#define JOE_PROTO_HELLO 1                   // 
#define JOE_PROTO_CHUNK 2                   // 
#define JOE_PROTO_CLOSE 3                   // 
#define JOE_PROTO_READY 4                   // 
#define JOE_PROTO_ERROR 5                   // 

//  Create a new empty joe_proto
JOE_EXPORT joe_proto_t *
    joe_proto_new (void);

//  Destroy a joe_proto instance
JOE_EXPORT void
    joe_proto_destroy (joe_proto_t **self_p);

//  Receive a joe_proto from the socket. Returns 0 if OK, -1 if
//  there was an error. Blocks if there is no message waiting. 
JOE_EXPORT int
    joe_proto_recv (joe_proto_t *self, zsock_t *input);

//  Send the joe_proto to the output socket, does not destroy it
JOE_EXPORT int
    joe_proto_send (joe_proto_t *self, zsock_t *output);

//  Print contents of message to stdout
JOE_EXPORT void
    joe_proto_print (joe_proto_t *self);

//  Get the message routing id, as a frame
JOE_EXPORT zframe_t *
    joe_proto_routing_id (joe_proto_t *self);

//  Set the message routing id from a frame
JOE_EXPORT void
    joe_proto_set_routing_id (joe_proto_t *self, zframe_t *routing_id);

//  Get the joe_proto message id
JOE_EXPORT int
    joe_proto_id (joe_proto_t *self);

//  Set the joe_proto message id
JOE_EXPORT void
    joe_proto_set_id (joe_proto_t *self, int id);

//  Get the joe_proto message id as printable text
JOE_EXPORT const char *
    joe_proto_command (joe_proto_t *self);

//  Get the filename field
JOE_EXPORT const char *
    joe_proto_filename (joe_proto_t *self);

//  Set the filename field
JOE_EXPORT void
    joe_proto_set_filename (joe_proto_t *self, const char *filename);

//  Get a copy of the aux field
JOE_EXPORT zhash_t *
    joe_proto_aux (joe_proto_t *self);

//  Get the aux field and transfer ownership to caller
JOE_EXPORT zhash_t *
    joe_proto_get_aux (joe_proto_t *self);

//  
JOE_EXPORT void
    joe_proto_set_aux (joe_proto_t *self, zhash_t **aux_p);

//  Get the offset field
JOE_EXPORT uint64_t
    joe_proto_offset (joe_proto_t *self);

//  Set the offset field
JOE_EXPORT void
    joe_proto_set_offset (joe_proto_t *self, uint64_t offset);

//  Get the size field
JOE_EXPORT uint64_t
    joe_proto_size (joe_proto_t *self);

//  Set the size field
JOE_EXPORT void
    joe_proto_set_size (joe_proto_t *self, uint64_t size);

//  Get the checksum field
JOE_EXPORT uint64_t
    joe_proto_checksum (joe_proto_t *self);

//  Set the checksum field
JOE_EXPORT void
    joe_proto_set_checksum (joe_proto_t *self, uint64_t checksum);

//  Get a copy of the data field
JOE_EXPORT zchunk_t *
    joe_proto_data (joe_proto_t *self);

//  Get the data field and transfer ownership to caller
JOE_EXPORT zchunk_t *
    joe_proto_get_data (joe_proto_t *self);

//  
JOE_EXPORT void
    joe_proto_set_data (joe_proto_t *self, zchunk_t **data_p);

//  Get the reason field
JOE_EXPORT const char *
    joe_proto_reason (joe_proto_t *self);

//  Set the reason field
JOE_EXPORT void
    joe_proto_set_reason (joe_proto_t *self, const char *reason);

//  Self test of this class.
JOE_EXPORT void
    joe_proto_test (bool verbose);

//  @end

//  For backwards compatibility with old codecs
#define joe_proto_dump      joe_proto_print

#ifdef __cplusplus
}
#endif

#endif
